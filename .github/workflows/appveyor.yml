name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        config:
        - name: 'release'
          CONFIGURATION: 'release'
        - name: 'debug'
          CONFIGURATION: 'debug'

    env:
      MSVC_VERSION: 19
      RUNTIME_LINKAGE: static
      QT_VERSION: 5.15
      QT_LINKAGE: static
      COVERITY_BUILD_CANDIDATE: True
      QTDIR: C:\Qt\${{ env.QT_VERSION }}\msvc2019_64
      PRJLIBS: VCRUNTIME140.dll MSVCP140.dll ucrtbased.dll
      CONFIGURATION: ${{ matrix.config }}
      BIN: mini-qml

    steps:
      - name: Set up Qt environment
        run: |
          $env:QTDIR = "${{ env.QTDIR }}"
          ${{ env.QTDIR }}\bin\qtenv2.bat
          qmake -v

      - name: Set up Visual Studio environment
        run: |
          set PRJLIBDIR=%WINDIR%\SysWOW64
          set QTDIR
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" amd64

      - name: Prepare build directory
        run: |
          cd ${{ env.APPVEYOR_BUILD_FOLDER }}
          mkdir ${{ env.APPVEYOR_BUILD_FOLDER }}-build
          qmake -o ${{ env.APPVEYOR_BUILD_FOLDER }}-build -r -Wall -Wlogic -Wparser CONFIG+=${{ env.CONFIGURATION }} ${{ env.APPVEYOR_BUILD_FOLDER }}

      - name: Build project
        run: |
          cd ${{ env.APPVEYOR_BUILD_FOLDER }}-build
          nmake
          dir /b /s *.exe

      - name: After build steps
        run: |
          dir /b /s *.exe
          mkdir deploy
          copy ${{ env.APPVEYOR_BUILD_FOLDER }}-build\${{ env.CONFIGURATION }}\${{ env.BIN }}.exe deploy\${{ env.BIN }}.exe
          windeployqt --qmldir ${{ env.APPVEYOR_BUILD_FOLDER }}/qml --${{ env.CONFIGURATION }} deploy/${{ env.BIN }}.exe --verbose=2
          for %%I in (${{ env.PRJLIBS }}) do copy ${{ env.PRJLIBDIR }}\%%I deploy\
          7z a -tzip ${{ env.BIN }}_${{ env.CONFIGURATION }}.zip deploy -r
          copy ${{ env.APPVEYOR_BUILD_FOLDER }}-build\${{ env.BIN }}_${{ env.CONFIGURATION }}.zip ${{ env.APPVEYOR_BUILD_FOLDER }}\${{ env.BIN }}_${{ env.CONFIGURATION }}.zip
          dir /b /s *.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          files: |
            ${{ env.APPVEYOR_BUILD_FOLDER }}/${{ env.BIN }}_${{ env.CONFIGURATION }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
